{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopNavBar.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/constants.js","components/Profile.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","React","Component","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","this","props","playerId","Season","then","response","console","log","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CountSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","onChartTypeChange","e","target","onTooltipChange","_","debounce","checkedChildren","unCheckedChildren","defaultChecked","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","fullName","teamAbbreviation","Profile","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","handleSelectPlayer","options","key","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","loadPlayerInfo","findPlayer","info","commonPlayerInfo","playerHeadlineStats","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,oD,2MCM9BC,EAAb,iLAEQ,OACI,4BAAQC,UAAU,cACd,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,cAJzD,GAA+BC,IAAMC,W,oDCCrCC,OAAOC,UAAY,CAACC,OAASA,KAItB,IAAMC,EAAb,6LAU0B,IAAD,OAEjBC,IAAIC,MAAMC,MAAM,CACZC,SAAUC,KAAKC,MAAMC,SACrBC,OAAQ,YACTC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,IAAMG,EAAcH,EAASI,kBAAkBC,KAAI,SAAAC,GAAI,MAAK,CACxDC,GAAID,EAAKE,KAAO,KAAO,GACvBC,GAAIH,EAAKI,KAAO,IAAM,GACtBC,YAAaL,EAAKM,WAClBC,cAAeP,EAAKQ,aACpBC,eAAgBT,EAAKU,iBAGnBC,EAAiBC,IAAU,eAGjCD,EAAeE,KAAK,IACpB,IAAMC,EAAcC,kBAAQC,MAAM,KAG5BC,EAAc9B,kBACf+B,oBAAoB,EAAK5B,MAAM6B,UAC/BC,gBAAgB,EAAK9B,MAAM+B,gBAC3BC,YAAY,EAAKhC,MAAMiC,WAC5BZ,EAAea,KAAKV,GACpBH,EAAec,MAAM5B,GAAa2B,KAAKP,QArCnD,+BAyCQ,OACI,yBAAKS,GAAG,mBA1CpB,GAA+B/C,IAAMC,W,sDCRxB+C,EAAb,2MACIC,MAAQ,CAEJC,WAAY,EAAKvC,MAAMwC,OAH/B,EAMIC,SAAW,SAACD,GACR,IAAME,EAAaC,OAAOH,GAASA,EAAO,EAAKF,MAAMC,WACrD,EAAKK,SAAS,CACVL,WAAYG,IAGhB,EAAK1C,MAAM6C,oBAAoBH,IAZvC,wEAgBQ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKI,KAAM,IACP,kBAAC,IAAD,CAAQC,IAAK,EAAGC,IAAK,GAAIP,SAAU1C,KAAK0C,SAAUD,MAAOzC,KAAKuC,MAAMC,cAExE,kBAAC,IAAD,CAAKO,KAAM,GACP,kBAAC,IAAD,CACIC,IAAK,EACLC,IAAK,GACLC,MAAO,CAAEC,WAAY,IACrBV,MAAOzC,KAAKuC,MAAMC,WAClBE,SAAU1C,KAAK0C,iBA3BvC,GAAiCpD,IAAMC,W,kBCGjC6D,EAAaC,IAAMC,MAGZC,EAAb,2MACIhB,MAAQ,CACJT,SAAU,EACVI,UAAW,SACXF,gBAAgB,GAJxB,EAOIc,oBAAsB,SAACU,GACnB,EAAKX,SAAS,CAAEf,SAAU0B,KARlC,EAaIC,kBAAoB,SAACC,GACjBpD,QAAQC,IAAImD,EAAEC,OAAOlB,OACrB,EAAKI,SAAS,CAAEX,UAAWwB,EAAEC,OAAOlB,SAf5C,EAkBImB,gBAAkB,SAAC5B,GACf1B,QAAQC,IAAIyB,GACZ,EAAKa,SAAS,CAAEb,oBApBxB,wEAyBQ,OADA1B,QAAQC,IAAI,UAER,yBAAKrB,UAAU,aACX,kBAAC,EAAD,CACIgB,SAAUF,KAAKC,MAAMC,SACrB4B,SAAU9B,KAAKuC,MAAMT,SACrBI,UAAWlC,KAAKuC,MAAML,UACtBF,eAAgBhC,KAAKuC,MAAMP,iBAE/B,yBAAK9C,UAAU,WACe,WAAzBc,KAAKuC,MAAML,UACR,kBAAC,EAAD,CAAaO,MAAOzC,KAAKuC,MAAMT,SAIlBgB,oBAAqBe,IAAEC,SAAS9D,KAAK8C,oBAAqB,OAAU,KACrF,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GACP,kBAACK,EAAD,CAAYV,SAAU1C,KAAKyD,kBAAmBhB,MAAOzC,KAAKuC,MAAML,WAC5D,kBAAC,IAAD,CAAOO,MAAM,UAAb,UACA,kBAAC,IAAD,CAAOA,MAAM,WAAb,aAGR,kBAAC,IAAD,CAAKM,KAAM,GACP,kBAAC,IAAD,CACIgB,gBAAgB,KAChBC,kBAAkB,MAClBtB,SAAU1C,KAAK4D,gBACfK,gBAAc,YArD9C,GAAuC3E,IAAMC,WCThC2E,EACX,gFAIWC,EAAsB,CACjCjE,SAAU,KACVkE,SAAU,eACVC,iBAAkB,OCLPC,EAAb,iLACc,IAAD,EAUDtE,KAAKC,MAAMsE,WARXF,EAFC,EAEDA,iBACAG,EAHC,EAGDA,SACAC,EAJC,EAIDA,SACAC,EALC,EAKDA,WACAC,EANC,EAMDA,OACAC,EAPC,EAODA,OACA1E,EARC,EAQDA,SACA2E,EATC,EASDA,IAAKC,EATJ,EASIA,IAAKC,EATT,EASSA,IAAKC,EATd,EAScA,IAEnB,OACI,yBAAK9F,UAAU,WACX,yBAAKA,UAAU,6BAAf,UAA+CwF,IAC/C,yBACIxF,UAAU,cACVC,IAAG,UAAK+E,EAAL,YAA+BhE,EAA/B,QACHb,IAAI,YAER,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,sBAAf,QACA,yBAAKA,UAAU,uBAAf,UAAyCsF,EAAzC,YAAqDC,KAEzD,yBACIvF,UAAU,YACVC,IAAG,UD1BrB,8CC0BqB,YAA4BkF,EAA5B,aACHhF,IAAI,SAER,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,sBAAf,UACA,yBAAKA,UAAU,uBAAf,UAAyCyF,KAE7C,yBAAKzF,UAAU,iBACX,yBAAKA,UAAU,sBAAf,UACA,yBAAKA,UAAU,uBAAf,UAAyC0F,KAE7C,yBAAK1F,UAAU,iBACX,yBAAKA,UAAU,sBAAf,OACA,yBAAKA,UAAU,uBAAf,UAAyC2F,KAE7C,yBAAK3F,UAAU,iBACX,yBAAKA,UAAU,sBAAf,OACA,yBAAKA,UAAU,uBAAf,UAAyC4F,KAE7C,yBAAK5F,UAAU,iBACX,yBAAKA,UAAU,sBAAf,OACA,yBAAKA,UAAU,uBAAf,UAAyC6F,KAE7C,yBAAK7F,UAAU,iBACX,yBAAKA,UAAU,sBAAf,OACA,yBAAKA,UAAU,uBAAf,UAAyC8F,UAnD7D,GAA6B1F,IAAMC,W,0BCE7B0F,EAASC,IAAaD,OAEfE,EAAb,2MACI5C,MAAQ,CACJ6C,WAAY,IAFpB,EASIC,aAAe,SAAC5C,GACZnC,QAAQC,IAAIkC,GACZ,EAAKI,SAAS,CACVuC,WAAa3C,EACJ7C,IAAI0F,cAAc7C,GAAO/B,KAAI,SAAA6E,GAAM,MAAK,CACzCnB,SAAUmB,EAAOnB,SACjBlE,SAAUqF,EAAOrF,aAFrB,MAbhB,EAsBIsF,SAAW,SAACd,GACR,EAAKzE,MAAMwF,mBAAmBf,IAvBtC,wEA0Bc,IAKAgB,EAJiB1F,KAAKuC,MAApB6C,WAImB1E,KAAI,SAAC6E,GAAD,OAE3B,kBAACN,EAAD,CAAQU,IAAKJ,EAAOnB,SAAU3B,MAAO8C,EAAOnB,SAAUlF,UAAU,iBAC5D,yBAAKA,UAAU,sBAAsBC,IAAG,UAAK+E,EAAL,YAA+BqB,EAAOrF,SAAtC,UACxC,0BAAMhB,UAAU,uBAAuBqG,EAAOnB,cAItD,OACI,kBAAC,IAAD,CACIlF,UAAU,aACV0G,KAAK,QACLR,WAAYM,EACZF,SAAUxF,KAAKwF,SACfK,SAAU7F,KAAKqF,aAEfS,YAAY,oBACZC,gBAAgB,SAEhB,kBAAC,IAAD,CAAOC,OAAQ,kBAAC,IAAD,CAAMC,KAAK,SAAS/G,UAAU,iCAlD7D,GAA+BI,IAAMC,W,8NCE9B,IAAM2G,EAAb,2MACI3D,MAAQ,CACJgC,WAAYJ,GAFpB,EAUIgC,eAAiB,SAACzB,GACdpE,QAAQC,IAAI,EAAKgC,MAAMgC,YACvB3E,IAAIC,MAAM0E,WAAW,CAAExE,SAAUH,IAAIwG,WAAW1B,GAAYxE,WAAYE,MAAK,SAACiG,GAAU,IAC5EC,EAA0CD,EAA1CC,iBAAkBC,EAAwBF,EAAxBE,oBACpBhC,E,yVAAU,IAAQ+B,EAAiB,GAAzB,GAAgCC,EAAoB,IACpE,EAAK1D,SAAS,CAAE0B,mBAf5B,EAmBIkB,mBAAqB,SAACf,GAClB,EAAKyB,eAAezB,IApB5B,mFAOQ1E,KAAKmG,eAAenG,KAAKuC,MAAMgC,WAAWH,YAPlD,+BAwBQ,OACI,yBAAKlF,UAAU,QACX,kBAAC,EAAD,CAAWuG,mBAAoBzF,KAAKyF,qBACpC,yBAAKvG,UAAU,UACf,kBAAC,EAAD,CAASqF,WAAYvE,KAAKuC,MAAMgC,aAChC,kBAAC,EAAD,CAAmBrE,SAAUF,KAAKuC,MAAMgC,WAAWrE,iBA7BnE,GAA0BZ,IAAMC,WCIjBiH,MATf,WACE,OACE,yBAAKtH,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIYuH,QACW,cAA7BjH,OAAOkH,SAASC,UAEe,UAA7BnH,OAAOkH,SAASC,UAEhBnH,OAAOkH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,MAAK,SAAAgH,GACjCA,EAAaC,kB","file":"static/js/main.9c2c88c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React from 'react';\nimport logo from '../assets/images/nba-logoman-word-white.svg';\n\n// need to export in order to be import by app.js\n\n// This is the top header component of our web page\nexport class TopNavBar extends React.Component {\n    render() {\n        return (\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n        );\n    }\n}","import React from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\n\n// ShotChart does not support React.\n// This is a React Wrapper to use the library.\nexport class ShotChart extends React.Component {\n    // make sure the playerId is a number and it is not empty\n    static propTypes = {\n        playerId: PropTypes.number.isRequired,\n        minCount: PropTypes.number,\n        chartType: PropTypes.string,\n        displayTooltip: PropTypes.bool,\n    }\n\n    // what to display on the DOM.\n    componentDidUpdate() {\n        // nba.stats.shots returns a Promise\n        nba.stats.shots({\n            PlayerID: this.props.playerId,\n            Season: \"2018-19\"\n        }).then((response) => {\n            console.log(response);\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\n                x: (shot.locX + 250) / 10,\n                y: (shot.locY + 50) / 10,\n                action_type: shot.actionType,\n                shot_distance: shot.shotDistance,\n                shot_made_flag: shot.shotMadeFlag,\n            }));\n\n            const courtSelection = d3.select(\"#shot-chart\");\n            // clear the shot chart when slider value is changed, not a re-rendering\n            // without this line, the shot chart will not update later.\n            courtSelection.html('');\n            const chart_court = court().width(500);\n            // shot render threshold: min number of shots required\n            // for a hexbin to display\n            const chart_shots = shots()\n                .shotRenderThreshold(this.props.minCount)\n                .displayToolTips(this.props.displayTooltip)\n                .displayType(this.props.chartType);\n            courtSelection.call(chart_court);\n            courtSelection.datum(final_shots).call(chart_shots);\n        });\n    }\n    render() {\n        return (\n            <div id=\"shot-chart\"></div>\n        );\n    }\n}\n","import React from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nexport class CountSlider extends React.Component {\n    state = {\n        // get value from parent component, i.e. DataViewContainer.\n        inputValue: this.props.value\n    }\n\n    onChange = (value) => {\n        const cleanValue = Number(value) ? value: this.state.inputValue;\n        this.setState({\n            inputValue: cleanValue,\n        });\n        // send the slider value back to parent component\n        this.props.onCountSliderChange(cleanValue);\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col span={12}>\n                    <Slider min={1} max={20} onChange={this.onChange} value={this.state.inputValue} />\n                </Col>\n                <Col span={4}>\n                    <InputNumber\n                        min={1}\n                        max={20}\n                        style={{ marginLeft: 16 }}\n                        value={this.state.inputValue}\n                        onChange={this.onChange}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}\n","import React from 'react';\nimport _ from 'lodash';\nimport { ShotChart } from './ShotChart';\nimport { CountSlider } from './CountSlider';\nimport { Radio, Row, Col, Switch } from 'antd';\n\nconst RadioGroup = Radio.Group;\n\n// Put count slider and shot chart under the same parent component.\nexport class DataViewContainer extends React.Component {\n    state = {\n        minCount: 2,\n        chartType: 'hexbin',\n        displayTooltip: true,\n    }\n\n    onCountSliderChange = (count) => {\n        this.setState({ minCount: count });\n    }\n\n    // e corresponds to which radio chose by user\n    // setState to re-render the new change\n    onChartTypeChange = (e) => {\n        console.log(e.target.value);\n        this.setState({ chartType: e.target.value });\n    }\n\n    onTooltipChange = (displayTooltip) => {\n        console.log(displayTooltip);\n        this.setState({ displayTooltip });\n    }\n\n    render() {\n        console.log('render');\n        return (\n            <div className=\"data-view\">\n                <ShotChart\n                    playerId={this.props.playerId}\n                    minCount={this.state.minCount}\n                    chartType={this.state.chartType}\n                    displayTooltip={this.state.displayTooltip}\n                />\n                <div className=\"filters\">\n                    {this.state.chartType === 'hexbin' ?\n                        <CountSlider value={this.state.minCount}\n                                     // count slider send back changed values to parent component\n                                     // Lodash debounce function: after user slide the slider, wait for 500ms to\n                            //       // run the function. prevent user slides the slider too fast.\n                                     onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}/> : null}\n                    <br/>\n                    <Row>\n                        <Col span={9}>\n                            <RadioGroup onChange={this.onChartTypeChange} value={this.state.chartType}>\n                                <Radio value=\"hexbin\">Hexbin</Radio>\n                                <Radio value=\"scatter\">Scatter</Radio>\n                            </RadioGroup>\n                        </Col>\n                        <Col span={4}>\n                            <Switch\n                                checkedChildren=\"On\"\n                                unCheckedChildren=\"Off\"\n                                onChange={this.onTooltipChange}\n                                defaultChecked />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n","export const PROFILE_PIC_URL_PREFIX =\n  'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX =\n  'https://stats.nba.com/media/img/teams/logos';\n\nexport const DEFAULT_PLAYER_INFO = {\n  playerId: 2544,\n  fullName: 'Lebron James',\n  teamAbbreviation: 'LAL'\n};\n","import React from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from './constants';\n\nexport class Profile extends React.Component {\n    render() {\n        const {\n            teamAbbreviation,\n            teamCity,\n            teamName,\n            playerName,\n            height,\n            weight,\n            playerId,\n            pts, reb, ast, pie,\n        } = this.props.playerInfo;\n        return (\n            <div className=\"profile\">\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n                <img\n                    className=\"profile-pic\"\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n                    alt=\"Profile\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Team</div>\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n                </div>\n                <img\n                    className=\"team-logo\"\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n                    alt=\"Team\"\n                />\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Height</div>\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">Weight</div>\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PTS</div>\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">REB</div>\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">AST</div>\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\n                </div>\n                <div className=\"profile-entry\">\n                    <div className=\"profile-entry-left\">PIE</div>\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport nba from 'nba';\nimport { PROFILE_PIC_URL_PREFIX } from './constants';\n\nconst Option = AutoComplete.Option;\n\nexport class SearchBar extends React.Component {\n    state = {\n        dataSource: [],\n    }\n\n    // During search, we pass the search value to nba to get matching results.\n    // Controlled component, every single letter typed will be combined with\n    // previous history (i.e. value) and passed to the backend nba.\n    // The backend nba responds any matching results.\n    handleSearch = (value) => {\n        console.log(value);\n        this.setState({\n            dataSource: !value ?\n                [] : nba.searchPlayers(value).map(player => ({\n                    fullName: player.fullName,\n                    playerId: player.playerId,\n                }))\n        });\n    }\n\n    // Once we select the player, pass the search value to\n    // Profile and Shotchart components.\n    onSelect = (playerName) => {\n        this.props.handleSelectPlayer(playerName);\n    }\n\n    render() {\n        const { dataSource } = this.state;\n        // Option is the component below search bar showing all the matching options during search.\n        // It's in a form of option list given by Ant design.\n        // To map dataSource, we need the handleSearch.\n        const options = dataSource.map((player) => (\n            // In Option, show player image on the left and full name on the right.\n            <Option key={player.fullName} value={player.fullName} className=\"player-option\">\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}/>\n                <span className=\"player-option-label\">{player.fullName}</span>\n            </Option>\n        ));\n\n        return (\n            <AutoComplete\n                className=\"search-bar\"\n                size=\"large\"\n                dataSource={options}\n                onSelect={this.onSelect}\n                onSearch={this.handleSearch}\n                // this is the default text in the search bar\n                placeholder=\"Search NBA Player\"\n                optionLabelProp=\"value\"\n            >\n                <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n            </AutoComplete>\n        );\n    }\n}\n","import React from 'react';\nimport { ShotChart } from './ShotChart';\nimport { DataViewContainer } from './DataViewContainer';\nimport { Profile } from './Profile';\nimport {SearchBar} from './SearchBar';\nimport { DEFAULT_PLAYER_INFO } from './constants';\nimport nba from 'nba';\n\n// This is the main part of the web page\nexport class Main extends React.Component {\n    state = {\n        playerInfo: DEFAULT_PLAYER_INFO,\n    }\n\n    // Lifecycle, show default player once open the web-page.\n    componentDidMount() {\n        this.loadPlayerInfo(this.state.playerInfo.fullName);\n    }\n\n    loadPlayerInfo = (playerName) => {\n        console.log(this.state.playerInfo)\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\n            const { commonPlayerInfo, playerHeadlineStats } = info;\n            const playerInfo = { ...commonPlayerInfo[0], ...playerHeadlineStats[0] };\n            this.setState({ playerInfo });\n        });\n    }\n\n    handleSelectPlayer = (playerName) => {\n        this.loadPlayerInfo(playerName);\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <SearchBar handleSelectPlayer={this.handleSelectPlayer}/>\n                <div className=\"player\">\n                <Profile playerInfo={this.state.playerInfo} />\n                <DataViewContainer playerId={this.state.playerInfo.playerId} />\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {TopNavBar} from './TopNavBar';\nimport {Main} from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <TopNavBar />\n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}